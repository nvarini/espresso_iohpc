./PP/src/projwfc.f90:     CALL iotk_write_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/projwfc.f90:     CALL iotk_write_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/projwfc.f90:     CALL iotk_write_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/projwfc.f90:     CALL iotk_write_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/projwfc.f90:          CALL iotk_write_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/projwfc.f90:          CALL iotk_write_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/write_proj.f90:     CALL iotk_write_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/write_proj.f90:     CALL iotk_write_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/write_proj.f90:     CALL iotk_write_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/write_proj.f90:     CALL iotk_write_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/write_proj.f90:          CALL iotk_write_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/write_proj.f90:          CALL iotk_write_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/molecularpdos.f90:       CALL iotk_scan_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/molecularpdos.f90:       CALL iotk_scan_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/molecularpdos.f90:       CALL iotk_scan_begin( iun, "K-POINT"//trim(iotk_index(ik)) )
./PP/src/molecularpdos.f90:       CALL iotk_scan_end( iun, "K-POINT"//trim(iotk_index(ik)) )
./CPV/src/cp_restart.f90:            CALL iotk_write_begin( iunpun, "K-POINT" // TRIM( iotk_index( ik ) ) )
./CPV/src/cp_restart.f90:            CALL iotk_write_end( iunpun, "K-POINT" // TRIM( iotk_index(ik) ) )
./CPV/src/cp_restart.f90:            CALL iotk_scan_begin( iunpun, "K-POINT" // TRIM( iotk_index(ik) ) )
./CPV/src/cp_restart.f90:         IF ( ionode ) CALL iotk_scan_end( iunpun, "K-POINT" // TRIM( iotk_index(ik) ) )
./PWCOND/src/cond_restart.f90:         CALL iotk_write_empty( iunpun, "K-POINT" // &
./PWCOND/src/cond_restart.f90:            CALL iotk_scan_empty(iunpun, "K-POINT"//TRIM(iotk_index(ik)), attr)
./PW/src/pw_restart.f90:            CALL iotk_write_begin( iunpun, "K-POINT" // TRIM( iotk_index( ik ) ) )
./PW/src/pw_restart.f90:            CALL iotk_write_end( iunpun, "K-POINT" // TRIM( iotk_index(ik) ) )
./PW/src/pw_restart.f90:            CALL iotk_scan_begin( iunpun, "K-POINT" // TRIM( iotk_index( ik ) ) )
./PW/src/pw_restart.f90:                                   "K-POINT" // TRIM( iotk_index( ik ) ) )
./PW/src/pw_restart.f90:            CALL iotk_scan_end( iunpun, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml_xsd.f90:         CALL iotk_write_empty( ounit, "K-POINT" // &
./Modules/qexml_xsd.f90:         CALL iotk_write_begin( ounit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml_xsd.f90:         CALL iotk_write_end( ounit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml_xsd.f90:         CALL iotk_write_begin( ounit, "K-POINT" // TRIM( iotk_index(ik) ) )
./Modules/qexml_xsd.f90:         CALL iotk_write_end( ounit, "K-POINT" // TRIM( iotk_index(ik) ) )
./Modules/qexml_xsd.f90:         CALL iotk_scan_empty( iunit, "K-POINT" // trim( iotk_index(ik) ), &
./Modules/qexml_xsd.f90:         CALL iotk_scan_begin( iunit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml_xsd.f90:         CALL iotk_scan_end( iunit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml_xsd.f90:         CALL iotk_scan_begin( iunit, "K-POINT" // TRIM( iotk_index(ik) ) )
./Modules/qexml_xsd.f90:         CALL iotk_scan_end( iunit, "K-POINT" // TRIM( iotk_index(ik) ), IERR = ierr )
./Modules/qexml.f90:         CALL iotk_write_empty( ounit, "K-POINT" // &
./Modules/qexml.f90:         CALL iotk_write_begin( ounit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml.f90:         CALL iotk_write_end( ounit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml.f90:         CALL iotk_write_begin( ounit, "K-POINT" // TRIM( iotk_index(ik) ) )
./Modules/qexml.f90:         CALL iotk_write_end( ounit, "K-POINT" // TRIM( iotk_index(ik) ) )
./Modules/qexml.f90:         CALL iotk_scan_empty( iunit, "K-POINT" // trim( iotk_index(ik) ), &
./Modules/qexml.f90:         CALL iotk_scan_begin( iunit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml.f90:         CALL iotk_scan_end( iunit, "K-POINT" // TRIM( iotk_index( ik ) ) )
./Modules/qexml.f90:         CALL iotk_scan_begin( iunit, "K-POINT" // TRIM( iotk_index(ik) ) )
./Modules/qexml.f90:         CALL iotk_scan_end( iunit, "K-POINT" // TRIM( iotk_index(ik) ), IERR = ierr )
