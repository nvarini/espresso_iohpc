%!PS-Adobe-2.0
%%Title: alas.dispersions.ps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Aug 23 16:16:33 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-15 (also called Latin9)
%
/reencodeISO15 {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin15Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin15Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/Euro/yen/Scaron
/section/scaron/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/Zcaron/mu/paragraph/periodcentered/zcaron/onesuperior/ordmasculine
/guillemotright/OE/oe/Ydieresis/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO15 def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (alas.dispersions.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (nvarini)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 23 16:16:33 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
980 240 M
63 0 V
5796 0 R
-63 0 V
stroke
860 240 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 747 M
63 0 V
5796 0 R
-63 0 V
stroke
860 747 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 1253 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1253 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 1760 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1760 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 2266 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2266 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 2773 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2773 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3279 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3279 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3786 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3786 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 350)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 4292 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4292 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 4799 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 450)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
980 4799 N
980 240 L
5859 0 V
0 4559 V
-5859 0 V
Z stroke
LCb setrgbcolor
160 2519 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (frequency \(cm)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -86.7 MCshow
grestore
LTb
1.000 UP
912 88 M
[ /Symbol reencodeISO15 def
[(Symbol) 200.0 0.0 true true 0 (G)]
] -66.7 MLshow
2280 88 M
[ [(Helvetica) 200.0 0.0 true true 0 (X)]
] -66.7 MLshow
2965 88 M
[ [(Helvetica) 200.0 0.0 true true 0 (W)]
] -66.7 MLshow
3649 88 M
[ [(Helvetica) 200.0 0.0 true true 0 (X)]
] -66.7 MLshow
5593 88 M
[ [(Symbol) 200.0 0.0 true true 0 (G)]
] -66.7 MLshow
6715 88 M
[ [(Helvetica) 200.0 0.0 true true 0 (L)]
] -66.7 MLshow
2.000 UL
LTb
LCb setrgbcolor
2349 240 M
0 4559 V
stroke
LTb
LCb setrgbcolor
3718 240 M
0 4559 V
stroke
LTb
LCb setrgbcolor
3033 240 M
0 4559 V
stroke
LTb
LCb setrgbcolor
5654 240 M
0 4559 V
stroke
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
3.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 200 scalefont setfont
/vshift -66 def
980 240 M
249 0 R
25 596 V
34 375 V
34 333 V
34 302 V
35 267 V
34 223 V
34 168 V
34 99 V
35 17 V
34 -83 V
34 -214 V
34 -407 V
34 -860 V
13 -816 V
2992 0 R
17 848 V
48 951 V
48 445 V
49 237 V
48 96 V
49 -11 V
48 -97 V
48 -169 V
49 -225 V
48 -279 V
49 -389 V
48 -456 V
48 -683 V
14 -268 V
374 0 R
544 0 R
19 390 V
29 202 V
30 143 V
30 110 V
29 85 V
30 63 V
29 45 V
30 29 V
30 13 V
29 -1 V
30 -14 V
30 -24 V
29 -34 V
30 -41 V
30 -46 V
29 -49 V
30 -49 V
29 -45 V
30 -40 V
30 -31 V
29 -20 V
30 -7 V
980 240 M
249 0 R
25 596 V
34 375 V
34 333 V
34 302 V
35 267 V
34 223 V
34 168 V
34 99 V
35 17 V
34 -83 V
34 -214 V
34 -407 V
34 -860 V
13 -816 V
2986 0 R
23 1292 V
48 842 V
48 412 V
49 202 V
48 60 V
49 -49 V
48 -138 V
48 -212 V
49 -278 V
48 -327 V
49 -305 V
48 -331 V
48 -354 V
49 -407 V
25 -407 V
314 0 R
544 0 R
19 390 V
29 202 V
30 143 V
30 110 V
29 85 V
30 63 V
29 45 V
30 29 V
30 13 V
29 -1 V
30 -14 V
30 -24 V
29 -34 V
30 -41 V
30 -46 V
29 -49 V
stroke 6661 1111 M
30 -49 V
29 -45 V
30 -40 V
30 -31 V
29 -20 V
30 -7 V
980 240 M
182 0 R
23 411 V
35 329 V
34 320 V
34 317 V
34 311 V
34 294 V
35 268 V
34 230 V
34 181 V
34 119 V
35 40 V
34 -57 V
34 -183 V
34 -359 V
34 -665 V
1686 240 L
2973 0 R
27 1832 V
48 975 V
48 542 V
49 299 V
48 122 V
49 -18 V
48 -131 V
48 -227 V
49 -308 V
48 -375 V
49 -426 V
48 -465 V
48 -496 V
49 -546 V
33 -778 V
306 0 R
459 0 R
15 474 V
29 368 V
30 269 V
30 225 V
29 195 V
30 170 V
30 147 V
29 126 V
30 106 V
29 86 V
30 69 V
30 51 V
29 36 V
30 22 V
30 8 V
29 -2 V
30 -11 V
30 -18 V
29 -23 V
30 -25 V
29 -25 V
30 -22 V
30 -17 V
29 -11 V
30 -4 V
980 4044 M
34 -3 V
34 -10 V
35 -12 V
34 -13 V
34 -7 V
34 2 V
35 16 V
34 31 V
34 46 V
34 57 V
34 63 V
35 62 V
34 53 V
34 35 V
34 11 V
35 -23 V
34 -61 V
34 -105 V
34 -150 V
34 -192 V
35 -220 V
34 -230 V
34 -206 V
34 -599 V
35 -897 V
1855 240 L
2706 0 R
28 1801 V
48 1090 V
49 731 V
48 297 V
48 206 V
49 132 V
48 61 V
49 -7 V
48 -63 V
48 -102 V
49 -121 V
48 -121 V
49 -106 V
48 -81 V
48 -50 V
49 -20 V
48 -17 V
49 1 V
48 33 V
48 48 V
49 47 V
48 33 V
49 12 V
29 -4 V
30 -11 V
29 -19 V
30 -25 V
30 -30 V
29 -33 V
30 -34 V
30 -34 V
29 -32 V
30 -26 V
30 -21 V
29 -13 V
30 -5 V
29 5 V
30 14 V
30 23 V
29 32 V
30 38 V
30 43 V
29 47 V
30 47 V
30 46 V
29 42 V
30 37 V
29 31 V
30 22 V
30 13 V
29 5 V
30 -5 V
30 -13 V
29 -21 V
30 -27 V
30 -32 V
29 -34 V
30 -34 V
29 -32 V
30 -27 V
30 -22 V
29 -13 V
30 -5 V
980 4044 M
34 -3 V
34 -10 V
35 -12 V
34 -13 V
34 -7 V
34 2 V
35 16 V
34 31 V
34 46 V
34 57 V
34 63 V
35 62 V
34 53 V
34 35 V
34 11 V
35 -23 V
34 -61 V
34 -105 V
34 -150 V
34 -192 V
35 -220 V
34 -230 V
34 -206 V
34 -145 V
35 -39 V
34 94 V
34 232 V
34 352 V
34 437 V
35 492 V
12 188 V
733 0 R
8 -54 V
34 -195 V
34 -130 V
34 -74 V
34 -32 V
35 -5 V
34 8 V
stroke 2965 4317 M
34 9 V
34 4 V
34 -4 V
35 -9 V
34 -8 V
34 5 V
34 32 V
35 74 V
34 130 V
34 195 V
7 54 V
723 0 R
19 -381 V
49 -1183 V
48 -1769 V
4171 240 L
387 0 R
31 2051 V
48 1009 V
49 568 V
48 528 V
48 366 V
8 37 V
263 0 R
20 -72 V
48 -200 V
49 -200 V
48 -180 V
48 -141 V
49 -93 V
48 -20 V
49 24 V
48 34 V
48 36 V
49 30 V
48 20 V
49 7 V
29 -4 V
30 -11 V
29 -19 V
30 -25 V
30 -30 V
29 -33 V
30 -34 V
30 -34 V
29 -32 V
30 -26 V
30 -21 V
29 -13 V
30 -5 V
29 5 V
30 14 V
30 23 V
29 32 V
30 38 V
30 43 V
29 47 V
30 47 V
30 46 V
29 42 V
30 37 V
29 31 V
30 22 V
30 13 V
29 5 V
30 -5 V
30 -13 V
29 -21 V
30 -27 V
30 -32 V
29 -34 V
30 -34 V
29 -32 V
30 -27 V
30 -22 V
29 -13 V
30 -5 V
980 4399 M
34 -4 V
34 -11 V
35 -14 V
34 -14 V
34 -6 V
34 7 V
35 26 V
34 47 V
34 68 V
34 87 V
34 98 V
35 100 V
6 16 V
205 0 R
28 -139 V
34 -240 V
35 -313 V
34 -395 V
34 -493 V
34 -176 V
35 -39 V
34 94 V
34 232 V
34 352 V
34 437 V
35 492 V
12 188 V
2071 0 R
15 -222 V
48 -755 V
49 -760 V
48 -730 V
49 -632 V
48 -383 V
48 72 V
49 400 V
48 491 V
48 484 V
49 446 V
48 405 V
49 445 V
48 449 V
stroke 4734 4509 M
43 290 V
368 0 R
25 -66 V
48 -123 V
48 -102 V
49 -76 V
48 -47 V
49 -22 V
48 -2 V
48 10 V
49 13 V
48 11 V
49 4 V
29 -1 V
30 -3 V
29 -5 V
30 -7 V
30 -9 V
29 -11 V
30 -11 V
30 -12 V
29 -11 V
30 -11 V
30 -9 V
29 -8 V
30 -5 V
29 -2 V
30 1 V
30 4 V
29 7 V
30 10 V
30 12 V
29 13 V
30 14 V
30 13 V
29 11 V
30 9 V
29 6 V
30 0 V
30 -3 V
29 -10 V
30 -14 V
30 -19 V
29 -23 V
30 -26 V
30 -27 V
29 -28 V
30 -27 V
29 -25 V
30 -20 V
30 -16 V
29 -9 V
30 -3 V
% End plot #1
stroke
1.000 UL
LTb
LCb setrgbcolor
980 4799 N
980 240 L
5859 0 V
0 4559 V
-5859 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
